"""
Django settings for sysmo project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
import configparser
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
LOG_DIR = "/var/log/sysmo/"

currentDirectory = os.path.dirname(os.path.realpath(__file__))
configDirectory = os.path.abspath(os.path.join(currentDirectory, os.pardir))
testDirectory = os.path.abspath(os.path.join('/etc/sysmo'))

dbConfigParser = configparser.RawConfigParser()
apConfigParser = configparser.RawConfigParser()
dbConfigFilePath = testDirectory + '/server_db.conf'
apConfigFilePath = testDirectory + '/server.conf'

dbConfigParser.read(dbConfigFilePath)
apConfigParser.read(apConfigFilePath)

# DB 設定參數
MY_HOST: str = dbConfigParser.get('mysql-config', 'HOST')
MY_PORT: int = int(dbConfigParser.get('mysql-config', 'PORT'))
MY_NAME: str = dbConfigParser.get('mysql-config', 'NAME')
MY_USER: str = dbConfigParser.get('mysql-config', 'USER')
MY_PASSWORD: str = dbConfigParser.get('mysql-config', 'PASSWORD')

# Server 設定參數
DEBUG_MODE: bool = apConfigParser.get('MODE', 'DEBUG_MODE')
# Log 相關參數
DEFAULT_INTERVAL: int = int(apConfigParser.get('logrotate', 'INTERVAL'))
DEFAULT_WARNING: int = int(
    apConfigParser.get('DEFAULT_POLICY', 'DEFAULT_WARNING'))
DEFAULT_MAJOR: int = int(apConfigParser.get('DEFAULT_POLICY', 'DEFAULT_MAJOR'))
DEFAULT_CRITICAL: int = int(
    apConfigParser.get('DEFAULT_POLICY', 'DEFAULT_CRITICAL'))
SWAP_WARNING: int = int(apConfigParser.get('SWAP_POLICY', 'SWAP_WARNING'))
SWAP_MAJOR: int = int(apConfigParser.get('SWAP_POLICY', 'SWAP_MAJOR'))
SWAP_CRITICAL: int = int(apConfigParser.get('SWAP_POLICY', 'SWAP_CRITICAL'))
DEFAULT_OFFLINE_TIME: int = int(
    apConfigParser.get('DEFAULT_POLICY', 'DEFAULT_OFFLINE_TIME'))

DISK_WARNING: int = int(apConfigParser.get('DISK_POLICY', 'DISK_WARNING'))
DISK_MAJOR: int = int(apConfigParser.get('DISK_POLICY', 'DISK_MAJOR'))
DISK_CRITICAL: int = int(apConfigParser.get('DISK_POLICY', 'DISK_CRITICAL'))

# Mail 相關參數
MAIL_SWITCH: int = int(apConfigParser.get('mail-config', 'SWITCH'))
MAIL_HOST: str = apConfigParser.get('mail-config', 'HOST')
MAIL_PORT: int = int(apConfigParser.get('mail-config', 'PORT'))
MAIL_USE_TLS: str = apConfigParser.get('mail-config', 'USE_TLS')
MAIL_USER: str = apConfigParser.get('mail-config', 'USER')
MAIL_PASSWORD: str = apConfigParser.get('mail-config', 'PASSWORD')

logging.basicConfig(
    level=logging.INFO if DEBUG_MODE is False else logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s',
    datefmt='[%d/%b/%Y %H:%M:%S]')

LIST_PER_PAGE = 200
# ------------------------------------------------------------------

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-xp5mq67$ooq&3)%ta!q#yzn_&p+%)tj$vzl76tu9==dj(1+pet'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'logserver',
    'django_crontab',
    'django.core.mail',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'sysmo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sysmo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.mysql',
        'NAME': MY_NAME,
        'USER': MY_USER,
        'PASSWORD': MY_PASSWORD,
        'HOST': MY_HOST,
        'PORT': MY_PORT,
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
STATIC_ROOT = os.path.join(BASE_DIR, 'asset')

STATIC_DIR = os.path.join(BASE_DIR, 'static')
logging.info(STATIC_DIR)

REPORT_DIR = os.path.join(BASE_DIR, 'reports')

TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = MAIL_HOST  # SMTP Server
EMAIL_PORT = MAIL_PORT
EMAIL_USE_TLS = False  # 開啟TLS(傳輸層安全性)
EMAIL_HOST_USER = MAIL_USER  # 寄件者電子郵件
EMAIL_HOST_PASSWORD = ""  # Gmail應用程式的密碼

CRONJOBS = [
    ('0 * * * *', 'log_gathering.cron.one_hour_refresh',
     '>>' + os.path.join(LOG_DIR, 'one_hour.log') + ' 2>&1'),
    ('* * * * *', 'log_gathering.cron.one_minute_refresh',
     '>>' + os.path.join(LOG_DIR, 'one_minute.log') + ' 2>&1'),
    # 報告寄送
    ('30 0 * * *', 'log_gathering.cron.create_daily_report',
     '>>' + os.path.join(LOG_DIR, 'create_daily_report.log') + ' 2>&1'),
    ('0 1 * * MON', 'log_gathering.cron.create_weekly_report',
     '>>' + os.path.join(LOG_DIR, 'create_weekly_report.log') + ' 2>&1'),
    ('0 2 1 * *', 'log_gathering.cron.create_monthly_report',
     '>>' + os.path.join(LOG_DIR, 'create_monthly_report.log') + ' 2>&1'),
    ('0 0 1 1 *', 'log_gathering.cron.create_yearly_report',
     '>>' + os.path.join(LOG_DIR, 'create_yearly_report.log') + ' 2>&1'),

    # 報告產出
    # 日報
    ('0 7 * * *', 'log_gathering.cron.send_daily_report',
     '>>' + os.path.join(LOG_DIR, 'send_daily_report.log') + ' 2>&1'),
    # 週報
    ('0 8 * * MON', 'log_gathering.cron.send_weekly_report',
     '>>' + os.path.join(LOG_DIR, 'send_weekly_report.log') + ' 2>&1'),
    # 月報
    ('0 9 1 * *', 'log_gathering.cron.send_monthly_report',
     '>>' + os.path.join(LOG_DIR, 'send_monthly_report.log') + ' 2>&1'),

    # ISMS Sync
    ('0 0 * * *', 'log_gathering.cron.sync_isms',
     '>>' + os.path.join(BASE_DIR, 'isms_report.log') + ' 2>&1'),
]

LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = '/dashboard/'
